---

- name: GET Nagios
  get_url:
  ansible.builtin.get_url:
    url: "{{ nagios_url }}"
    dest: "{{ nagios_download_dir }}/{{ nagios_src }}.tar.gz"
    mode: 0755

- name: Unpack Nagios source files
  shell: cd {{ nagios_download_dir }} && tar -xzvf {{ nagios_src }}.tar.gz creates={{ nagios_download_dir }}/{{ nagios_src }}
  ansible.builtin.shell: cd {{ nagios_download_dir }} && tar -xzvf {{ nagios_src }}.tar.gz creates={{ nagios_download_dir }}/{{ nagios_src }}

- name: ./configure
  shell: ./configure --with-command-group={{ nagios_monitoring_command_group }} -with-httpd_conf={{ nagios_with_httpd_conf }} --with-nagios-user={{ nagios_monitoring_user }}  # noqa 204 305
  ansible.builtin.shell: ./configure --with-command-group={{ nagios_monitoring_command_group }} -with-httpd_conf={{ nagios_with_httpd_conf }} --with-nagios-user={{ nagios_monitoring_user }}  # noqa 204 command-instead-of-shell
  args:
    chdir: "{{ nagios_download_dir }}/{{ nagios_src }}"
    creates: "{{ nagios_download_dir }}/{{ nagios_src }}/Makefile"

- name: Make all
  shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make all creates={{ nagios_download_dir }}/{{ nagios_src }}/base/nagios
  ansible.builtin.shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make all creates={{ nagios_download_dir }}/{{ nagios_src }}/base/nagios

- name: Make install
  shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make install creates=/usr/local/nagios/bin/nagios
  ansible.builtin.shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make install creates=/usr/local/nagios/bin/nagios

- name: Make install-config
  shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make install-config creates=/usr/local/nagios/etc/nagios.cfg
  ansible.builtin.shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make install-config creates=/usr/local/nagios/etc/nagios.cfg

- name: Make install-commandmode
  shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make install-commandmode creates=/usr/local/nagios/var/rw
  ansible.builtin.shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make install-commandmode creates=/usr/local/nagios/var/rw

- name: Make install-devel
  shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make install-devel creates=/usr/local/nagios/include/nagios/nagios.h
  ansible.builtin.shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make install-devel creates=/usr/local/nagios/include/nagios/nagios.h

- name: Make install-webconf
  shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make install-webconf creates={{ nagios_with_httpd_conf }}/nagios.conf
  notify: restart apache
  ansible.builtin.shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make install-webconf creates={{ nagios_with_httpd_conf }}/nagios.conf
  notify: Restart apache
  when: not ( ansible_distribution == "Debian" and ansible_distribution_major_version == "7" )

- name: Make install-webconf-Debian
  shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make install-webconf HTTPD_CONF={{ nagios_with_httpd_conf }}
  ansible.builtin.shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make install-webconf HTTPD_CONF={{ nagios_with_httpd_conf }}
  args:
    creates: "{{ nagios_with_httpd_conf }}/nagios.conf"
  notify: restart apache
  notify: Restart apache
  when: ansible_distribution == "Debian" and ansible_distribution_major_version == "7"

- name: Check if /etc/init.d/nagios exists
  stat:
  ansible.builtin.stat:
    path: /etc/init.d/nagios
  register: init_d_nagios_stat

- name: Check if /lib/systemd/system/nagios.service exists
  stat:
  ansible.builtin.stat:
    path: /lib/systemd/system/nagios.service
  register: nagios_service_stat

- name: Make install-init
  shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make install-init
  ansible.builtin.shell: cd {{ nagios_download_dir }}/{{ nagios_src }} && make install-init
  when:
    - not init_d_nagios_stat.stat.exists
    - not nagios_service_stat.stat.exists

- name: re-check if /etc/init.d/nagios exists
  stat:
- name: Re-check if /etc/init.d/nagios exists
  ansible.builtin.stat:
    path: /etc/init.d/nagios
  register: init_d_nagios_stat_2

- name: insert/update /etc/init.d/nagios
  lineinfile:
- name: Insert/update /etc/init.d/nagios
  ansible.builtin.lineinfile:
    dest: /etc/init.d/nagios
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
@@ -75,7 +75,7 @@
  when: init_d_nagios_stat_2.stat.exists

- name: Set htpasswd for gui users
  htpasswd:
  community.general.htpasswd:
    path: /usr/local/nagios/etc/htpasswd.users
    name: "{{ item.user }}"
    password: "{{ item.pass }}"
@@ -87,7 +87,7 @@
  no_log: true

- name: Set htpasswd for gui users from users variable
  htpasswd:
  community.general.htpasswd:
    crypt_scheme: plaintext
    path: /usr/local/nagios/etc/htpasswd.users
    name: "{{ item.username }}"
